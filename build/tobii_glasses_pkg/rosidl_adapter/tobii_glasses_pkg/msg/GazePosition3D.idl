// generated from rosidl_adapter/resource/msg.idl.em
// with input from tobii_glasses_pkg/msg/GazePosition3D.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module tobii_glasses_pkg {
  module msg {
    typedef float float__3[3];
    @verbatim (language="comment", text=
      " Values roughly correspond to:" "\n"
      " ts (timestamp)" "\n"
      " s (status)" "\n"
      " gidx (gaze index)" "\n"
      " l (latency)" "\n"
      " gp (gaze position)")
    struct GazePosition3D {
      @verbatim (language="comment", text=
        " Header timestamp should be acquisition time of image")
      std_msgs::msg::Header glasses_header;

      uint8 status;

      uint32 latency;

      uint32 gaze_index;

      @verbatim (language="comment", text=
        " Header frame_id should be optical frame of camera" "\n"
        " origin of frame should be optical center of camera" "\n"
        " +x should point to the right in the image" "\n"
        " +y should point down in the image" "\n"
        " +z should point into to plane of the image" "\n"
        " If the frame_id here and the frame_id of the CameraInfo" "\n"
        " message associated with the image conflict" "\n"
        " the behavior is undefined")
      float__3 gaze_position_3d;
    };
  };
};
